//==================================================================================================================
//
// HPの描画 [hitpoint.cpp]
// Author : Seiya Takahashi
//
//==================================================================================================================
#define _CRT_SECURE_NO_WARNINGS

//==================================================================================================================
//	インクルードファイル
//==================================================================================================================
#include <stdio.h>
#include <stdlib.h>
#include "renderer.h"
#include "scene2D.h"
#include "manager.h"
#include "inputKeyboard.h"
#include "hitpoint.h"
#include "bar.h"
#include "player.h"
#include "game.h"

//==================================================================================================================
//	コンストラクタ
//==================================================================================================================
CHitPoint::CHitPoint(PRIORITY type = PRIORITY_UI) : CScene(type)
{

}

//==================================================================================================================
//	初期化処理
//==================================================================================================================
void CHitPoint::Init(void)
{
	//CPlayer *pPlayer = CGame::GetPlayer();

	//初期化
	m_pBar = NULL;
	m_pos = D3DXVECTOR3(0, 0, 0);
	//m_fMaxHP = pPlayer->GetLife();
	m_fNowHP = m_fMaxHP;
	m_fWidth = MAX_WIDTH;

	//Barの生成
	m_pBar = CBar::Create();
	if (m_pBar != NULL)
	{
		m_pBar->SetVertexBar(0, D3DXVECTOR3(50, 650, 0), D3DXCOLOR(0.0f, 1.0f, 0.25f, 1.0f), MAX_WIDTH, MAX_HEIGHT);
		m_pBar->SetVertexBar(1, D3DXVECTOR3(39, 650, 0), D3DXCOLOR(1.0f, 1.0f, 1.0f, 1.0f), MAX_WIDTH + 22, MAX_HEIGHT);
	}
}

//==================================================================================================================
//	終了処理
//==================================================================================================================
void CHitPoint::Uninit(void)
{
	// バーがあるとき
	if (m_pBar != NULL)
	{
		//Barの終了処理
		m_pBar->Uninit();
	}
}

//==================================================================================================================
//	更新処理
//==================================================================================================================
void CHitPoint::Update(void)
{
	//Barの更新処理
	m_pBar->Update();

	//CPlayer *pPlayer = CGame::GetPlayer();

	//float NowHP = pPlayer->GetLife();													//プレイヤーの体力取得
	float fWidth = 0;																	//現在の画像の幅
	float fResidue = 0.0f;																//残りの数値

	//m_fNowHP = NowHP / m_fMaxHP;														//HPの比率計算
	fWidth = m_fNowHP * m_fWidth;														//描画すべき画像幅がいくらなのか
	//fResidue = (m_fMaxHP - NowHP) / m_fMaxHP;

	if (m_fNowHP > 0.5f)
	{
		m_pBar->SetVertexBar(0, D3DXVECTOR3(50, 650, 0), D3DXCOLOR(0.0f + fResidue * 2, 1.0f, 0.25f - (fResidue / 2), 1.0f), fWidth, MAX_HEIGHT);
	}
	else
	{
		m_pBar->SetVertexBar(0, D3DXVECTOR3(50, 650, 0), D3DXCOLOR(1.0f, m_fNowHP * 2, 0.0f, 1.0f), fWidth, MAX_HEIGHT);
	}
}

//==================================================================================================================
//	描画処理
//==================================================================================================================
void CHitPoint::Draw(void)
{
	//Barの描画処理
	m_pBar->Draw();
}

//==================================================================================================================
// オブジェクトの生成
//==================================================================================================================
CHitPoint * CHitPoint::Create(void)
{
	CHitPoint *pHitPoint = NULL;				// ポインタ変数

	pHitPoint = new CHitPoint(PRIORITY_UI);		// メモリを動的確保
	pHitPoint->Init();							// 初期化処理

	return pHitPoint;							// 値を返す
}

//==================================================================================================================
//	位置の設定
//==================================================================================================================
void CHitPoint::SetPos(D3DXVECTOR3 pos)
{
	m_pos = pos;
}

//==================================================================================================================
//	位置の取得
//==================================================================================================================
D3DXVECTOR3 CHitPoint::GetPos(void)
{
	return m_pos;
}

//==================================================================================================================
//	デストラクタ
//==================================================================================================================
CHitPoint::~CHitPoint(void)
{

}
