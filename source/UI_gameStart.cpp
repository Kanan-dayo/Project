//==================================================================================================================
//
// ゲーム開始時のUI演出 [ UI_gameStart.cpp ]
// Author : KANAN NAGANAWA
//
//==================================================================================================================
#define _CRT_SECURE_NO_WARNINGS							// 警告回避文

//==================================================================================================================
// インクルードファイル
//==================================================================================================================
#include "UI_gameStart.h"
#include "renderer.h"
#include "manager.h"
#include "inputKeyboard.h"
#include "inputGamepad.h"
#include "game.h"
#include "fade.h"
#include "kananlibrary.h"
#include "scene2D.h"

//==================================================================================================================
// マクロ定義
//==================================================================================================================

//==================================================================================================================
// 静的メンバ変数宣言
//==================================================================================================================
LPDIRECT3DTEXTURE9	CUI_GameStart::m_pTexture[GAMEUITEX_MAX] = {};
CScene2D			*CUI_GameStart::m_pScene2D[GAMEUITEX_MAX] = {};
char				*CUI_GameStart::m_apFileName[GAMEUITEX_MAX] =
{
	{ "data/TEXTURE/round.png" },
	{ "data/TEXTURE/round_1.png" },
	{ "data/TEXTURE/round_2.png" },
	{ "data/TEXTURE/round_3.png" },
	{ "data/TEXTURE/fight.png" }
};

//==================================================================================================================
// コンストラクタ
//==================================================================================================================
CUI_GameStart::CUI_GameStart()
{

}

//==================================================================================================================
// デストラクタ
//==================================================================================================================
CUI_GameStart::~CUI_GameStart()
{

}

//==================================================================================================================
// 初期化処理
//==================================================================================================================
void CUI_GameStart::Init(void)
{

}

//==================================================================================================================
// 終了処理
//==================================================================================================================
void CUI_GameStart::Uninit(void)
{
	for (int nCnt = 0; nCnt < GAMEUITEX_MAX; nCnt++)
	{
		if (m_pScene2D[nCnt])
			m_pScene2D[nCnt]->Uninit();
	}
}

//==================================================================================================================
// 更新処理
//==================================================================================================================
void CUI_GameStart::Update(void)
{

}

//==================================================================================================================
// 描画処理
//==================================================================================================================
void CUI_GameStart::Draw(void)
{

}

//==================================================================================================================
// オブジェクトの生成
//==================================================================================================================
CUI_GameStart * CUI_GameStart::Create(void)
{
	// メモリ確保
	CUI_GameStart *pUI = new CUI_GameStart;
	// 初期化
	pUI->Init();
	// 値を返す
	return pUI;
}

//==================================================================================================================
// テクスチャ情報ロード
//==================================================================================================================
HRESULT CUI_GameStart::Load(void)
{
	// デバイスを取得する
	LPDIRECT3DDEVICE9 pDevice = CManager::GetRenderer()->GetDevice();

	// ブロックコメント
	CKananLibrary::StartBlockComment("ゲーム開始時のテクスチャの読み込み開始");

	// テクスチャの読み込み
	for (int nCnt = 0; nCnt < GAMEUITEX_MAX; nCnt++)
	{
		if (SUCCEEDED(D3DXCreateTextureFromFile(pDevice, m_apFileName[nCnt], &m_pTexture[nCnt])))
			std::cout << m_apFileName[nCnt] << " の読み込み成功" << std::endl;	// 成功
		else
			std::cout << m_apFileName[nCnt] << " の読み込み失敗" << std::endl;	// 失敗
	}

	// 成功
	CKananLibrary::EndBlockComment("ゲーム開始時のテクスチャの読み込み終了");
	return S_OK;
}

//==================================================================================================================
// テクスチャ情報破棄
//==================================================================================================================
void CUI_GameStart::Unload(void)
{
	// テクスチャの最大数までカウント
	for (int nCnt = 0; nCnt < GAMEUITEX_MAX; nCnt++)
	{
		// テクスチャがあるとき
		if (m_pTexture[nCnt] != NULL)
		{
			m_pTexture[nCnt]->Release();	// テクスチャの開放
			m_pTexture[nCnt] = NULL;		// NULLにする
		}
	}
}

//==================================================================================================================
// UIの生成
//==================================================================================================================
void CUI_GameStart::CreateUI(int type)
{
	// 生成
	m_pScene2D[type] = CScene2D::Create();
	// テクスチャバインド
	m_pScene2D[type]->BindTex(m_pTexture[type]);
	// 位置とサイズを設定
	//m_pScene2D[type]->SetSize(m_sizeBegin[type]);
	//m_pScene2D[type]->SetPos(m_posBegin[type]);
}
